[{"content":"修改默认主题 注：themes 文件夹内的主题文件为默认模板，如要修改，建议将文件copy至hugo项目下的同名目录中\n修改默认模板为yaml格式 将以下内容粘贴至archetypes\\default.md中。\n（vsc中的markdown highlighting不支持toml）\n注：此处slug为文件夹名，tags，categories默认为文件所在目录的父目录名\n1 2 3 4 5 6 7 8 9 10 11 --- slug: \u0026#39;{{ .File.Dir | path.Base }}\u0026#39; date : \u0026#39;{{ .Date }}\u0026#39; draft : false title : \u0026#39;{{ replace .File.ContentBaseName \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#39; description : \u0026#34;\u0026#34; tags: - \u0026#39;{{ path.Base (path.Dir (path.Dir (replace .File.Dir \u0026#34;\\\\\u0026#34; \u0026#34;/\u0026#34;))) }}\u0026#39; categories: - \u0026#39;{{ path.Base (path.Dir (path.Dir (replace .File.Dir \u0026#34;\\\\\u0026#34; \u0026#34;/\u0026#34;))) }}\u0026#39; --- 修改网站字体 需将字体文件放入assets\\font\\CascadiaMono.ttf下\n1 2 3 4 5 6 7 8 9 10 11 12 13 // layouts\\partials\\footer\\custom.html // 添加 CascadiaMono 字体 \u0026lt;style\u0026gt; @font-face { font-family: \u0026#39;CascadiaMono\u0026#39;; src: url({{ (resources.Get \u0026#34;font/CascadiaMono.ttf\u0026#34;).Permalink }}) format(\u0026#39;truetype\u0026#39;); } :root { --base-font-family: \u0026#39;CascadiaMono\u0026#39;; --code-font-family: \u0026#39;CascadiaMono\u0026#39;; } \u0026lt;/style\u0026gt; 增加bilibili视频可选播放进度，增加自动播放，是否静音等变量 将themes\\hugo-theme-pure\\layouts\\partials\\bilibili.html copy 到 layouts\\shortcodes\\bilibili.html下\n正式引用时，代码需要\u0026rsquo;{{ }}\u0026rsquo;\n1 2 3 4 5 6 7 8 9 {\u0026lt; BV号 播放开始时间 播放自动开始 分P 是否静音 \u0026gt;} 此为变量顺序，类python方法赋值，不写明则为默认值，不可乱序赋值。 例： {\u0026lt; bilibili BV11i4y1b7pd\u0026gt;} {\u0026lt; bilibili BV11i4y1b7pd \u0026#34;1:14\u0026#34;\u0026gt;} 1:14开始播放，默认不自动播放 {\u0026lt; bilibili BV11i4y1b7pd \u0026#34;1:14\u0026#34; 1 \u0026gt;} 1:14开始播放，自动播放 {\u0026lt; bilibili BV11i4y1b7pd \u0026#34;1:14\u0026#34; 1 1 0\u0026gt;} 1:14开始播放，自动播放视频中的1p，不静音 --\u0026gt; 但是浏览器总会禁止自动播放的视频的音量，目前静音算是无效。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 {{ $vid := (.Get 0) }} \u0026lt;!-- 处理开始时间参数，支持两种格式：秒数或分钟:秒钟 --\u0026gt; {{ $start_time_param := default 0 (.Get 1) }} {{ $start_time := 0 }} {{ if strings.Contains (string $start_time_param) \u0026#34;:\u0026#34; }} \u0026lt;!-- 如果包含冒号，说明是分钟:秒钟格式 --\u0026gt; {{ $time_parts := split (string $start_time_param) \u0026#34;:\u0026#34; }} {{ if eq (len $time_parts) 2 }} {{ $minutes := int (index $time_parts 0) }} {{ $seconds := int (index $time_parts 1) }} {{ $start_time = add (mul $minutes 60) $seconds }} {{ else }} {{ $start_time = 0 }} {{ end }} {{ else }} \u0026lt;!-- 否则直接使用数字作为秒数 --\u0026gt; {{ $start_time = int $start_time_param }} {{ end }} {{ $autoplay := default 0 (.Get 2) }} \u0026lt;!-- 添加 autoplay 参数，默认不自动播放 --\u0026gt; {{ $videopage := default 1 (.Get 3) }} \u0026lt;!-- 添加 视频 播放分P参数，默认播放第一P --\u0026gt; {{ $muted := default 0 (.Get 4) }} \u0026lt;!-- 添加 muted 参数，默认不静音 --\u0026gt; 文章显示字数，阅读量（非Pjax） 新建layouts\\partials\\footer\\custom.html 添加如下代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;!-- vercount的脚本；若用不蒜子，则更换成不蒜子的脚本就好 --\u0026gt; \u0026lt;script defer src=\u0026#34;https://cn.vercount.one/js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- vercount无法在首页显示浏览数，故在首页隐藏 --\u0026gt; \u0026lt;script\u0026gt; function showHideView() { // 判断是否存在vercount标签 let viewCounts = document.querySelectorAll(\u0026#34;#viewCount\u0026#34;); if (viewCounts) { // 判断是否为文章页 let article = document.querySelector(\u0026#34;.article-page\u0026#34;); if (!article) { viewCounts.forEach(ele =\u0026gt; { ele.style.display = \u0026#39;none\u0026#39;; }); } } } showHideView(); \u0026lt;/script\u0026gt; 从themes copy layouts\\partials\\article\\components\\details.html，并添加以下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;!-- 字数统计 --\u0026gt; \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;word\u0026#34; }} \u0026lt;time class=\u0026#34;article-words\u0026#34;\u0026gt; {{ .WordCount }}字 \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- 浏览量统计 --\u0026gt; \u0026lt;div id=\u0026#34;viewCount\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;eye\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--reading\u0026#34;\u0026gt; \u0026lt;span id=\u0026#34;vercount_value_page_pv\u0026#34;\u0026gt;... \u0026lt;/span\u0026gt;次 \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; 修改Categories和Tags页面list模板样式 修改Categories和Tags页面list模板为主页一样的article-list defalut样式\n1 2 3 4 5 6 7 8 // layouts\\_default\\list.html \u0026lt;section class=\u0026#34;article-list\u0026#34;\u0026gt; // 修改article-list--compact为article-list {{ range $paginator.Pages }} {{ partial \u0026#34;article-list/default\u0026#34; . }} //修改compact为default {{ end }} \u0026lt;/section\u0026gt; 一些美化模板 compact自动扩充列数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 @media (min-width: 800px) { .article-list--compact { display: grid; // 使用 auto-fit 和 repeat 来创建动态列数 grid-template-columns: repeat(auto-fit, minmax(417px, 1fr)); background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; margin-right: 8px; border-radius: 16px; } } } // 友情链接动态列数 @media (min-width: 800px) { .article-list--compact.links { display: grid; // 使用 auto-fit 和 repeat 来创建动态列数 grid-template-columns: repeat(auto-fit, minmax(313px, 1fr)); background: none; box-shadow: none; gap: 1rem; article { max-width: auto; background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; border-radius: var(--card-border-radius); \u0026amp;:nth-child(odd) { margin-right: 8px; } } } } 隐藏目录序号 1 2 3 4 5 6 7 8 9 10 11 #TableOfContents { ul, ol { list-style: none; padding-left: 0; } li { list-style: none; margin-left: 0; } } 文章内部-页脚-相关文章图片圆角 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 .article-list--compact article .article-image img, .section-card .section-image img{ width: 100%; height: 100%; max-height: 100px; max-width: 100px; border-radius: 5%; object-fit: cover; } // 针对 links 界面的图片样式 .article-list--compact.links .article-image img { width: 100%; height: 50px; max-height: 100px; max-width: 100px; border-radius: 5%; object-fit: cover; } 界面动画 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 // 文章list动画 .article-list article { transition: transform 0.3s ease, box-shadow 0.3s ease; will-change: transform, box-shadow; \u0026amp;:hover { transform: translateY(-1px); box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2), 0 4px 6px rgba(0, 0, 0, 0.15); } } // 文章标题动画 .article-title span{ position: relative; display: inline-block; \u0026amp;::after { content: \u0026#39;\u0026#39;; position: absolute; bottom: -4px; right: 0; width: 0; height: 3px; background-color: currentColor; transition: width 0.4s ease; will-change: width; } \u0026amp;:hover::after { width: 100%; left: 0; } } .article-category a { transition: transform 0.3s ease; will-change: transform; \u0026amp;:hover { transform: scale(1.1, 1.1); will-change: transform; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.15); } } // 标签云动画 .tagCloud-tags a{ transition: transform 0.3s ease !important; will-change: transform; \u0026amp;:hover { transform: scale(1.1, 1.1) !important; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.15) !important; } } // 为头像添加悬停动画 .site-logo,.emoji { transition: transform 0.4s ease; will-change: transform; \u0026amp;:hover { transform: scale(1.2, 1.2); will-change: transform; } } // 如果您的图标是SVG或有特定class .menu-social [class*=\u0026#34;icon-tabler\u0026#34;] { -webkit-font-smoothing: antialiased; will-change: transform; transition: transform 0.4s ease; \u0026amp;:hover { transform: scale(1.2, 1.2); will-change: transform; } } /* 左侧栏选项动画 */ #main-menu { overflow: visible; li { a { -webkit-font-smoothing: antialiased; will-change: transform; transition: transform 0.4s ease; \u0026amp;:hover { transform: scale(1.1, 1.1); will-change: transform; } } } } /* 归档和链接卡片动画 */ .article-list--compact { overflow: visible; } .article-list--compact article { transition: transform 0.2s ease; -webkit-font-smoothing: antialiased; will-change: transform; \u0026amp;:hover { transform: scale(1.03,1.03); z-index: 4; } } /* 分类页面动画 */ .article-list--tile article { transition: 0.2s ease; } .article-list--tile article:hover { transform: scale(1.02, 1.02); will-change: transform; } // 暗色模式切换按钮动画 #dark-mode-toggle { transition: transform 0.4s ease; will-change: transform; \u0026amp;:hover { transform: scale(1.2, 1.2); will-change: transform; } } 参考链接 [1]: letere-gzj hugo-stack\n","date":"2025-08-16T18:40:51+08:00","permalink":"https://easthq.github.io/hugo-help/","title":"Hugo修改记录"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 themes/stack/ ├── .devcontainer/ # 开发容器配置，用于在VS Code中使用开发容器 │ ├── devcontainer.json # 开发容器配置文件 │ └── Dockerfile # Docker镜像配置文件 ├── .github/ # GitHub相关配置 │ └── workflows/ # GitHub Actions工作流配置 │ └── publish.yaml # 发布相关的自动化工作流 ├── archetypes/ # 内容模板文件，用于创建新内容时的默认Front Matter │ ├── categories.md # 分类内容的模板 │ ├── default.md # 默认内容模板 │ └── tags.md # 标签内容的模板 ├── assets/ # 静态资源文件（CSS、JavaScript、图片等） │ ├── icons/ # SVG图标文件 │ │ ├── archives.svg # 归档图标 │ │ ├── arrow-back.svg # 后退箭头图标 │ │ ├── arrow-forward.svg # 前进箭头图标 │ │ ├── back.svg # 返回图标 │ │ ├── brand-github.svg # GitHub品牌图标 │ │ ├── brand-twitter.svg # Twitter品牌图标 │ │ ├── calendar.svg # 日历图标 │ │ ├── category.svg # 分类图标 │ │ ├── clock.svg # 时钟图标 │ │ ├── close.svg # 关闭图标 │ │ ├── email.svg # 邮箱图标 │ │ ├── hash.svg # 哈希标签图标 │ │ ├── home.svg # 首页图标 │ │ ├── link.svg # 链接图标 │ │ ├── menu.svg # 菜单图标 │ │ ├── moon.svg # 月亮图标（暗色模式） │ │ ├── search.svg # 搜索图标 │ │ ├── sun.svg # 太阳图标（亮色模式） │ │ ├── tag.svg # 标签图标 │ │ └── user.svg # 用户图标 │ ├── img/ # 图片资源 │ │ └── default-hero.jpg # 默认的页面头图 │ ├── jsconfig.json # JavaScript配置文件 │ ├── scss/ # SCSS样式文件 │ │ ├── breakpoints.scss # 响应式断点定义 │ │ ├── custom.scss # 自定义样式文件 │ │ ├── external/ # 外部样式库 │ │ │ └── normalize.scss # CSS重置样式 │ │ ├── general.scss # 通用样式 │ │ ├── grid.scss # 网格布局样式 │ │ ├── partials/ # 部分样式文件 │ │ │ ├── article.scss # 文章样式 │ │ │ ├── comments.scss # 评论样式 │ │ │ ├── footer.scss # 页脚样式 │ │ │ ├── header.scss # 页头样式 │ │ │ ├── helper.scss # 辅助样式 │ │ │ ├── highlight.scss # 代码高亮样式 │ │ │ ├── pagination.scss # 分页样式 │ │ │ ├── sidebar.scss # 侧边栏样式 │ │ │ └── widget.scss # 小部件样式 │ │ ├── style.scss # 主样式文件 │ │ └── variables.scss # 样式变量定义 │ └── ts/ # TypeScript脚本文件 │ ├── color.ts # 颜色处理功能 │ ├── colorScheme.ts # 颜色方案切换功能 │ ├── createElement.ts # 创建元素功能 │ ├── gallery.ts # 图片画廊功能 │ ├── main.ts # 主JavaScript入口文件 │ ├── menu.ts # 菜单功能 │ ├── scrollspy.ts # 滚动监听功能 │ ├── search.tsx # 搜索功能 │ └── smoothAnchors.ts # 平滑锚点滚动功能 ├── config.yaml # 主题配置文件，定义默认参数 ├── data/ # 数据文件 │ └── external.yaml # 外部资源定义（如CDN链接） ├── debug.sh # 调试脚本 ├── exampleSite/ # 示例站点 │ ├── content/ # 示例内容 │ ├── hugo.yaml # 示例站点配置文件 │ └── README.md # 示例站点说明 ├── go.mod # Go模块定义文件 ├── i18n/ # 国际化语言文件 │ ├── ar.yaml # 阿拉伯语 │ ├── en.yaml # 英语 │ ├── zh-cn.yaml # 简体中文 │ └── ... # 其他语言文件 ├── images/ # 主题图片 │ ├── screenshot.png # 主题截图 │ └── tn.png # 缩略图 ├── layouts/ # 页面布局模板 │ ├── 404.html # 404页面模板 │ ├── _default/ # 默认布局 │ │ ├── _markup/ # Markdown渲染模板 │ │ ├── archives.html # 归档页面模板 │ │ ├── baseof.html # 基础页面模板 │ │ ├── list.html # 列表页面模板 │ │ ├── rss.xml # RSS订阅模板 │ │ └── single.html # 单页模板 │ ├── index.html # 首页模板 │ ├── page/ # 页面模板 │ │ ├── search.html # 搜索页面模板 │ │ └── search.json # 搜索数据JSON模板 │ ├── partials/ # 部分模板组件 │ │ ├── article/ # 文章相关组件 │ │ ├── article-list/ # 文章列表组件 │ │ ├── comments/ # 评论系统组件 │ │ ├── data/ # 数据展示组件 │ │ ├── footer/ # 页脚组件 │ │ ├── head/ # 头部组件 │ │ ├── helper/ # 辅助组件 │ │ ├── pagination.html # 分页组件 │ │ ├── sidebar/ # 侧边栏组件 │ │ └── widget/ # 小部件组件 │ └── shortcodes/ # 简码（shortcode）模板 │ ├── bilibili.html # 嵌入Bilibili视频简码 │ ├── gitlab.html # 嵌入GitLab内容简码 │ ├── quote.html # 引用简码 │ ├── tencent.html # 嵌入腾讯视频简码 │ ├── video.html # 视频简码 │ └── youtube.html # 嵌入YouTube视频简码 ├── netlify.toml # Netlify部署配置 ├── README.md # 主题说明文档 ├── theme.toml # 主题元信息文件 ","date":"2025-08-23T19:44:48+08:00","permalink":"https://easthq.github.io/hugo-dir/","title":"Hugo Stack目录结构"},{"content":"引入Pjax脚本 1 2 3 4 5 6 7 8 9 10 \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/pjax/pjax.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; // 定义 Pjax 需要刷新的部分 \u0026lt;script\u0026gt; var pjax = new Pjax({ selectors: [ \u0026#34;.main-container\u0026#34;, \u0026#34;.js-Pjax\u0026#34;, ], }); \u0026lt;/script\u0026gt; Pjax 自动执行脚本模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // 前边定义过，这里不用重复定义 \u0026lt;script\u0026gt; var pjax = new Pjax({ selectors: [ \u0026#34;.main-container\u0026#34;, \u0026#34;.js-Pjax\u0026#34;, ], }); \u0026lt;/script\u0026gt; {{- with .Site.Params.comments.giscus -}} \u0026lt;script class=\u0026#34;js-Pjax\u0026#34;\u0026gt; (function () { // 判断当前是否有文章评论标识 let comment = document.querySelector(\u0026#34;.comment\u0026#34;); if (!comment) { return } let script = document.createElement(\u0026#39;script\u0026#39;); // 将对应评论的脚本内容填进去 script.setAttribute(\u0026#39;src\u0026#39;, \u0026#39;https://giscus.app/client.js\u0026#39;); ··· // 寻找合适的元素，添加脚本进去(在页脚前将评论脚本插入) document.querySelector(\u0026#39;.site-footer\u0026#39;).before(script) })(document); \u0026lt;/script\u0026gt; {{- end -}} Pjax 引入giscus评论脚本 同为giscus, hugo stack可直接复制\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 {{- with .Site.Params.comments.giscus -}} \u0026lt;script class=\u0026#34;js-Pjax\u0026#34;\u0026gt; (function () { // 判断当前是否有文章评论标识 let comment = document.querySelector(\u0026#34;.comment\u0026#34;); if (!comment) { return } let script = document.createElement(\u0026#39;script\u0026#39;); // 将对应评论的脚本内容填进去 script.setAttribute(\u0026#39;src\u0026#39;, \u0026#39;https://giscus.app/client.js\u0026#39;); script.setAttribute(\u0026#39;data-repo\u0026#39;, \u0026#39;{{- .repo -}}\u0026#39;); script.setAttribute(\u0026#39;data-repo-id\u0026#39;, \u0026#39;{{- .repoID -}}\u0026#39;); script.setAttribute(\u0026#39;data-category\u0026#39;, \u0026#39;{{- .category -}}\u0026#39;); script.setAttribute(\u0026#39;data-category-id\u0026#39;, \u0026#39;{{- .categoryID -}}\u0026#39;); script.setAttribute(\u0026#39;data-mapping\u0026#39;, \u0026#39;{{- default `title` .mapping -}}\u0026#39;); script.setAttribute(\u0026#39;data-strict\u0026#39;, \u0026#39;{{- default 0 .strict -}}\u0026#39;); script.setAttribute(\u0026#39;data-reactions-enabled\u0026#39;, \u0026#39;{{- default 1 .reactionsEnabled -}}\u0026#39;); script.setAttribute(\u0026#39;data-emit-metadata\u0026#39;, \u0026#39;{{- default 0 .emitMetadata -}}\u0026#39;); script.setAttribute(\u0026#39;data-input-position\u0026#39;, \u0026#39;{{- default `top` .inputPosition -}}\u0026#39;); script.setAttribute(\u0026#39;data-theme\u0026#39;, \u0026#39;{{- default `light` .lightTheme -}}\u0026#39;); script.setAttribute(\u0026#39;data-lang\u0026#39;, \u0026#39;{{- default `en` .lang -}}\u0026#39;); script.setAttribute(\u0026#39;data-loading\u0026#39;, \u0026#39;{{- .loading -}}\u0026#39;); script.setAttribute(\u0026#39;crossorigin\u0026#39;, \u0026#39;anonymous\u0026#39;); script.async = true; // 寻找合适的元素，添加脚本进去(在页脚前将评论脚本插入) document.querySelector(\u0026#39;.site-footer\u0026#39;).before(script) })(document); \u0026lt;/script\u0026gt; {{- end -}} Pjax 引入vercount脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \u0026lt;div class=\u0026#34;js-Pjax\u0026#34;\u0026gt; \u0026lt;script\u0026gt; (function() { const existingScript = document.querySelector(\u0026#39;script[src=\u0026#34;https://cn.vercount.one/js\u0026#34;]\u0026#39;); if (existingScript) { existingScript.remove(); } let script = document.createElement(\u0026#39;script\u0026#39;); // 将对应评论的脚本内容填进去 script.src = \u0026#39;https://cn.vercount.one/js\u0026#39;; script.defer = true; document.body.appendChild(script) })(); \u0026lt;/script\u0026gt; \u0026lt;/div\u0026gt; // 将相关的class也添加到js-Pjax中 // vercount无法在首页显示浏览数，故在首页隐藏 \u0026lt;script class=\u0026#34;js-Pjax\u0026#34;\u0026gt; function showHideView() { // 判断是否存在vercount标签 let viewCounts = document.querySelectorAll(\u0026#34;#viewCount\u0026#34;); if (viewCounts) { // 判断是否为文章页 let article = document.querySelector(\u0026#34;.article-page\u0026#34;); if (!article) { viewCounts.forEach(ele =\u0026gt; { ele.style.display = \u0026#39;none\u0026#39;; }); } } } showHideView(); \u0026lt;/script\u0026gt; Pjax 引入返回顶部按钮 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 \u0026lt;!-- 返回顶部按钮 --\u0026gt; \u0026lt;style\u0026gt; #backTopBtn { display: none; position: fixed; bottom: 30px; right: 30px; /* 改为right定位，避免依赖右侧边栏 */ z-index: 99; cursor: pointer; width: 30px; height: 30px; background-image: url({{ (resources.Get \u0026#34;icons/backTop.svg\u0026#34;).RelPermalink }}); background-size: contain; background-repeat: no-repeat; background-position: center; opacity: 0.5; transition: transform 1s ease-in-out; } \u0026lt;/style\u0026gt; \u0026lt;!-- 返回顶部 --\u0026gt; \u0026lt;script\u0026gt; /** * 滚动回顶部初始化 */ function initScrollTop() { // 检查按钮是否已存在，避免重复创建 if (document.getElementById(\u0026#34;backTopBtn\u0026#34;)) { return; } // 创建返回顶部按钮 let btn = document.createElement(\u0026#34;div\u0026#34;); btn.id = \u0026#34;backTopBtn\u0026#34;; btn.onclick = backToTop; // 直接添加到body中，不依赖特定容器 document.body.appendChild(btn); // 滚动监听 window.onscroll = function() { // 当网页向下滑动 20px 出现\u0026#34;返回顶部\u0026#34; 按钮 if (document.body.scrollTop \u0026gt; 20 || document.documentElement.scrollTop \u0026gt; 20) { btn.style.display = \u0026#34;block\u0026#34;; } else { btn.style.display = \u0026#34;none\u0026#34;; } }; // 初始化时检查是否需要显示按钮 if (document.body.scrollTop \u0026gt; 20 || document.documentElement.scrollTop \u0026gt; 20) { btn.style.display = \u0026#34;block\u0026#34;; } } /** * 返回顶部 */ function backToTop(){ window.scrollTo({ top: 0, behavior: \u0026#34;smooth\u0026#34; }); } // 页面加载完成后初始化 if (document.readyState === \u0026#39;loading\u0026#39;) { document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, initScrollTop); } else { initScrollTop(); } // Pjax完成后重新初始化 document.addEventListener(\u0026#39;pjax:complete\u0026#39;, () =\u0026gt; { initScrollTop(); }); \u0026lt;/script\u0026gt; Pjax 引入移动端目录按钮{{ if (.Context.Scratch.Get \u0026#34;TOCEnabled\u0026#34;) }} \u0026lt;!-- 移动端目录按钮 --\u0026gt; \u0026lt;button id=\u0026#34;toggle-toc\u0026#34; class=\u0026#34;mobile-only\u0026#34;\u0026gt;Toc\u0026lt;/button\u0026gt; \u0026lt;section class=\u0026#34;widget archives\u0026#34; id=\u0026#34;toc-container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;widget-icon\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;hash\u0026#34; }} \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;widget-title section-title\u0026#34;\u0026gt;{{ T \u0026#34;article.tableOfContents\u0026#34; }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;widget--toc\u0026#34;\u0026gt; {{ .Context.TableOfContents }} \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; {{ end }} \u0026lt;style\u0026gt; .container { .right-sidebar { /* flex 布局显示移动端目录按钮 */ display: flex; } } /* 默认隐藏移动端目录元素，电脑端将覆盖显示 */ .mobile-only { display: none !important; } #toc-container { /* 初始时不再隐藏目录，电脑端默认显示，移动端会被覆盖隐藏 */ /* display: none; */ position: fixed; /* 使用固定定位，使其固定在视口中 */ bottom: 21%; /* 距离视口顶部的距离 */ right: 60px; /* 距离视口右侧的距离 */ background-color: var(--card-background); /* 可选：设置背景颜色 */ padding: 10px; /* 可选：添加一些内边距 */ border: 1px solid #96979a50; border-radius: var(--card-border-radius); /* 可选：添加边框样式 */ box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px; /* 可选：设置 z-index 以确保它显示在其他元素之上 */ z-index: 9998 !important; /* 设置最大高度为视口高度的 75% */ max-height: 75vh; overflow-y: auto; /* 让容器的宽度自适应内容 */ width: auto; max-width: 290px; } #toggle-toc { position: fixed; bottom: 22%; right: 20px; padding: 10px 10px; z-index: 9998 !important; border: 0px solid #96979a50; border-radius: 7px; box-shadow: var(--shadow-l1); background-color: #00640010; color: #34495e; /* 确保按钮在其他元素之上 */ display: none; /* 初始时在电脑端也隐藏按钮，移动端通过媒体查询显示 */ margin-bottom: -20px; cursor: pointer; font-size: 1.2rem; } * { -webkit-tap-highlight-color: transparent; tap-highlight-color: transparent; } /* #toggle-toc:hover { box-shadow: var(--shadow-l2); background-color: var(--card-background-selected); } */ .widget--toc #TableOfContents { overflow-x: auto; max-height: 66vh; width: auto; } @media screen and (max-width: 768px) { .mobile-only { display: block !important; /* 移动端显示 \u0026#39;Toc\u0026#39; 按钮 */ } #toc-container { display: none; /* 移动端依旧隐藏目录容器，通过按钮显示 */ } #toggle-toc { display: block; /* 移动端显示 toggle 按钮 */ } } /* 电脑端样式：屏幕宽度大于 768px 时应用 */ @media screen and (min-width: 769px) { #toc-container { display: block !important; /* 电脑端默认显示目录容器 */ position: static; /* 移除固定定位，让目录在正常文档流中 */ border: none; /* 移除边框 */ box-shadow: none; /* 移除阴影 */ max-height: none; /* 移除最大高度限制 */ overflow-y: visible; /* 移除垂直滚动条 */ margin-top: 20px; /* 可以根据需要添加一些顶部外边距，与页面内容区隔开 */ right: auto; /* 重置 right 属性 */ bottom: auto; /* 重置 bottom 属性 */ width: auto; /* 宽度自适应内容 */ max-width: 100%; /* 最大宽度可以设置为 100% 或您需要的宽度 */ background-color: transparent; /* 背景色透明，或者设置为您想要的颜色 */ padding: 0; /* 移除内边距 */ } #toggle-toc { display: none !important; /* 电脑端隐藏 \u0026#39;Toc\u0026#39; 按钮 */ } } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; // 初始化TOC切换功能 function initTocToggle() { var toggleButton = document.getElementById(\u0026#39;toggle-toc\u0026#39;); var tocContainer = document.getElementById(\u0026#39;toc-container\u0026#39;); // 确保元素存在再添加事件监听器 if (toggleButton \u0026amp;\u0026amp; tocContainer) { // 移除可能存在的旧事件监听器，防止重复绑定 var newToggleButton = toggleButton.cloneNode(true); toggleButton.parentNode.replaceChild(newToggleButton, toggleButton); toggleButton = newToggleButton; // 添加点击事件：切换目录的显示状态 toggleButton.addEventListener(\u0026#39;click\u0026#39;, function(e) { e.stopPropagation(); var computedDisplay = window.getComputedStyle(tocContainer).display; if (computedDisplay === \u0026#39;none\u0026#39;) { tocContainer.style.display = \u0026#39;block\u0026#39;; } else { tocContainer.style.display = \u0026#39;none\u0026#39;; } }); // 点击页面其他地方隐藏目录 document.removeEventListener(\u0026#39;click\u0026#39;, handleDocumentClick); document.addEventListener(\u0026#39;click\u0026#39;, handleDocumentClick); } function handleDocumentClick(e) { if (tocContainer \u0026amp;\u0026amp; tocContainer.style.display === \u0026#39;block\u0026#39; \u0026amp;\u0026amp; !tocContainer.contains(e.target) \u0026amp;\u0026amp; e.target !== toggleButton) { tocContainer.style.display = \u0026#39;none\u0026#39;; } } } // 页面加载完成后初始化 if (document.readyState === \u0026#39;loading\u0026#39;) { document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, initTocToggle); } else { initTocToggle(); } // Pjax完成后重新初始化（兼容Pjax） document.addEventListener(\u0026#39;pjax:complete\u0026#39;, function() { // 延迟执行确保DOM已更新 setTimeout(initTocToggle, 100); }); \u0026lt;/script\u0026gt; 参考链接 [1]: https://letere-gzj.github.io/hugo-stack/tags/hugo/\n[2]: https://blog.laphel.com/posts/hugo-stack-renovation/#添加移动端目录\n","date":"2025-08-23T19:19:34+08:00","permalink":"https://easthq.github.io/pjax-debug/","title":"Pjax Debug"},{"content":" A Letter To sit on a hotel balcony in Jerusalem\n坐在耶路撒冷一家旅馆的阳台上\nand to write:\u0026ldquo;Sweetly pass the days\n写下：\u0026ldquo;从沙漠到大海\nfrom desert to sea.\u0026rdquo; And to write: \u0026ldquo;Tears\n日子甜蜜地过去了。\u0026ldquo;写下：\u0026ldquo;泪水\ndry quickly here. This blot is a tear that\n在此地干得很快。污渍是眼泪\nmade the ink run.\u0026rdquo; That\u0026rsquo;s how they used to write\n冲湿的墨迹。\u0026ldquo;他们在上个世纪\nin the last century. \u0026ldquo;I have drawn\n常常这样写道。\u0026ldquo;我已经绕着它\na little circle around it.\u0026quot;\n画了一个小小的圆。\u0026quot;\nTime passes, as when someone\u0026rsquo;s on the phone\n时光流逝，正如每当有人在电话里\nLaughing or crying far away from me:\n从离我很远的地方大笑或哭泣时：\nWhatever I hear, I can\u0026rsquo;t see;\n凡我听到的，我看不到；\nwhat I see, I don\u0026rsquo;t hear.\n凡我看到的，我听不到。\nWe weren\u0026rsquo;t careful when we said \u0026ldquo;next year\u0026rdquo;\n我们常常不经意地说起\u0026quot;明年\u0026rdquo;\nOr \u0026ldquo;A month ago.\u0026rdquo; Those words\n或者\u0026quot;上个月\u0026rdquo;。而这些词语\nare like broken glass: you can hurt yourself with them,\n像破碎的玻璃：会伤害你自己\neven slash an artery, if\n甚至会让你割断动脉，如果\nthat\u0026rsquo;s what you\u0026rsquo;re like.\n你是这样的性格\nBut you were beautiful as the commentary\n而你象古代经文中的注释\non an ancient text.\n一样美丽。\nThe surplus of women in your distant country\n在你遥远的国度里过剩的女人\nBrought you to me, but\n将你引向我，而\nanother law of probability\n另一种机缘\nhas taken you away again.\n又将你带走\nTo live is to build a ship and a harbor\n活着就是同时建造一艘船\nat the same time. And to finish the harbor\n和一座港口。就是在船下沉很久后\nlong after the ship has gone down.\n把港口建好。\nAnd to conclude: I remember only\n总之：我只记得\nthat it was foggy. And if that\u0026rsquo;s the way you remember\u0026ndash;\n天雾蒙蒙的。而假如那就是你记忆的方式——\nwhat do you remember?\n你记起了什么？\n","date":"2025-08-23T19:06:44+08:00","permalink":"https://easthq.github.io/%E9%98%BF%E7%B1%B3%E4%BA%A5%E7%9A%84%E4%BF%A1/","title":"阿米亥的信"},{"content":"安装 在Github release下载最新版网卡配置编辑器。 下载netConfig.zip，解压到任意目录。 将目录中的netConfig.exe文件右键发送到桌面快捷方式。 右键桌面的快捷方式-属性-快捷方式-高级-用管理员方式启动（或属性-兼容性-以管理员身份运行）。 之后可双击管理员运行此程序 使用方法 编辑预置网卡信息 通过中间的增删改按钮，可对预置的网卡信息进行增删改。 点击移动按钮，可对网卡进行排序。 最后一定要点保存，持久化网卡配置信息。 也可以通过软件目录中的network_configs.json文件以json格式进行编辑\n应用网卡配置 通过下拉框，选择要配置的网卡 在网卡配置列表中选择配置，双击即可应用 或在当前网卡配置中编辑配置信息，点击应用静态IP，可将配置应用到当前网卡 ","date":"2025-08-22T09:15:02+08:00","permalink":"https://easthq.github.io/netconfig/","title":"网卡编辑器"},{"content":" ","date":"2025-08-16T01:20:46+08:00","image":"https://easthq.github.io/%E6%89%8B%E5%86%99%E7%9A%84%E4%BB%8E%E5%89%8D/jay_hu_13fee6912866149f.jpg","permalink":"https://easthq.github.io/%E6%89%8B%E5%86%99%E7%9A%84%E4%BB%8E%E5%89%8D/","title":"《手写的从前》"},{"content":"等待戈多 “结尾是什么？”\n“等待。”\n“之后呢？”\n“没有之后。”\n“或者说，等待的结果呢？”\n“等待就是结果。”\n“那，不是悲剧吗？”\n“不，是秋天。”\n夏日将尽。阳光悄然走进屋里,所有随它移动的影子都似陷入了回忆。那时在远处，在北方的天边，远得近乎抽象的地方，仔细听，会有些极细微的骚动正仿佛站成一排，拉开一线，嗡嗡嘤嘤跃跃欲试，那就是最初的秋风，是秋风正在起程。\n--史铁生《我与地坛》\n","date":"2025-08-15T16:46:27+08:00","permalink":"https://easthq.github.io/%E5%B0%8F%E8%AE%B0/","title":"小记"},{"content":" 正文测试 这里有两棵树，\n一颗是枣树，\n另一颗也是枣树。\n--鲁迅\n","date":"2025-08-14T13:23:36+08:00","permalink":"https://easthq.github.io/qq%E8%80%81%E5%B8%88%E7%9A%84%E6%99%B4%E5%A4%A9/","title":"QQ老师的晴天"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://easthq.github.io/","title":""}]